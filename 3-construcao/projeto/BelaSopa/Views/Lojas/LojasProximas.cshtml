
@{
    Layout = "_LayoutAutenticado";
    ViewData["Title"] = "Lojas próximas";
}


<div id='printoutPanel'>

</div>
<div id="myMap" style="position:relative;width:600px;height:400px;"></div>

<button style="margin-top:2em;" id="search" type="submit" class="btn btn-success" onclick="search('Pingo Doce')">Procurar loja mais próxima</button>


<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=loadMapScenario&branch=experimental&key=Ap3Fn5C1EGzEsXDN7UqrIoYqFKj5popAxjxJ7Mi-EgRa--bSfeDB7yMVR9154KXp' async defer></script>
<script type='text/javascript'>
    var map, searchManager, point, loc;

    function createAnchorMorada(morada) {
        var a = document.createElement('a');
        var textnode = document.createTextNode(morada);
        a.onclick = function () { searchWithoutPrint(morada); };
        a.appendChild(textnode);
        document.getElementById("printoutPanel").appendChild(a);
        document.getElementById("printoutPanel").appendChild(document.createElement("br"));
    }

    function loadMapScenario() {
        map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
            credentials: 'Ap3Fn5C1EGzEsXDN7UqrIoYqFKj5popAxjxJ7Mi-EgRa--bSfeDB7yMVR9154KXp',
            mapTypeId: Microsoft.Maps.MapTypeId.aerial,
            zoom: 10
        });

    }

    function GoToLocation(x, y) {
        var point = new Microsoft.Maps.Point(x, y);
        myCoord = { x: x, y: y };
        console.log(myCoord);
        var loc = map.tryPixelToLocation(point, Microsoft.Maps.PixelReference.control);
        document.getElementById('printoutPanel').innerHTML = '<b>Point to location</b> <br>' + loc + '<br>';
        // location to point
        loc = map.getCenter();
        point = map.tryLocationToPixel(loc, Microsoft.Maps.PixelReference.control);
        document.getElementById('printoutPanel').innerHTML += '<b>Location to point</b> <br>' + point;
    }

    function searchWithoutPrint(query) {
        //Create an instance of the search manager and perform the search.
    Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
        searchManager = new Microsoft.Maps.Search.SearchManager(map);
        geocodeQuery(map, query, false);
    });
     }

     function search(query) {
    //Create an instance of the search manager and perform the search.
    Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
        searchManager = new Microsoft.Maps.Search.SearchManager(map);
        geocodeQuery(map, query, true);
    });
     }

    function geocodeQuery(map, query, showResults) {
        if (showResults) document.getElementById('printoutPanel').innerHTML = "";
    var searchRequest = {
        where: query,
        callback: function (r) {
            if (r && r.results && r.results.length > 0) {
                var pin, pins = [], locs = [], output = 'Results:<br/>';
                for (var i = 0; i < r.results.length; i++) {
                    //Create a pushpin for each result. 
                    pin = new Microsoft.Maps.Pushpin(r.results[i].location, {
                        text: i + ''
                    });
                    pins.push(pin);
                    locs.push(r.results[i].location);
                    if(showResults)
                        createAnchorMorada(r.results[i].name);
                    //output += i + ') ' + r.results[i].name + '<br/>';
                }
                //Add the pins to the map
                map.entities.push(pins);
                //Display list of results
                //document.getElementById('printoutPanel').innerHTML = output;
                //Determine a bounding box to best view the results.
                var bounds;
                if (r.results.length == 1) {
                    bounds = r.results[0].bestView;
                }
                else {
                    //Use the locations from the results to calculate a bounding box.
                    //bounds = Microsoft.Maps.LocationRect.fromLocations(locs);
                     bounds = r.results[0].bestView;
                }
                map.setView({ bounds: bounds });
            }
        },
        errorCallback: function (e) {
            //If there is an error, alert the user about it.
            document.getElementById('printoutPanel').innerHTML = 'No results found.';
        }
    };
    //Make the geocode request.
    searchManager.geocode(searchRequest);
}

    function GoToLocation(x, y) {
        point = new Microsoft.Maps.Point(x, y);
        myCoord = { x: x, y: y };
        console.log(myCoord);
        loc = map.tryPixelToLocation(point, Microsoft.Maps.PixelReference.control);
        document.getElementById('printoutPanel').innerHTML = '<b>Point to location</b> <br>' + loc + '<br>';
        // location to point
        loc = map.getCenter();
        point = map.tryLocationToPixel(loc, Microsoft.Maps.PixelReference.control);
        document.getElementById('printoutPanel').innerHTML += '<b>Location to point</b> <br>' + point;
    }

    window.addEventListener("load", function () {
        navigator.geolocation.getCurrentPosition(function (position) {
            loadMapScenario(position.coords);
        });
    });

</script>

